<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_d</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create instance wide variables for respirator and sprint
respirator = 9000;
sprint = 300;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and collision code
//Amount to move player by each "step"
var step = 4;
//Running state
var running = false;

var movX = 0;
var movY = 0;

var img_speed = 0.3;

if (keyboard_check(vk_shift)) {
    running = true;    
}

//Reset player to keep still
image_speed = 0;

if (running == true) {
    if (sprint &gt; 0) {
        sprint -= 4;
        step = 6;
        img_speed = 0.5;
    } else {
        sprint = 0;
        step = 4;
    }
} else {
    if (sprint &lt; 300) {
        sprint += 1;
    }
    step = 4;
}

if (keyboard_check(ord('A'))) {
    movX = -step;
    sprite_index = spr_player_l;
    image_speed = img_speed;
}

if (keyboard_check(ord('D'))) {
    movX = step;
    sprite_index = spr_player_r;
    image_speed = img_speed;
}

if (keyboard_check(ord('W'))) {
    movY = -step;
    sprite_index = spr_player_u;
    image_speed = img_speed;
}

if (keyboard_check(ord('S'))) {
    movY = step;
    sprite_index = spr_player_d;
    image_speed = img_speed;
}

//Collision prevention
//Move closer if there is not enought room to move
for (var i = abs(movX); i &gt; 0; i--) {
    if (place_free(x + sign(movX)*i, y)) {
        x += sign(movX)*i;
        //Stop once moved
        break;
    }
}

for (var i = abs(movY); i &gt; 0; i--) {
    if (place_free(x, y + sign(movY)*i)) {
        y += sign(movY)*i;
        //Stop once moved
        break;
    }
}

//Reduce respirator
if respirator &gt; 0 {
    respirator -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws resources
viewX = view_xview[0];
viewY = view_yview[0];

draw_healthbar(viewX + 10, viewY + 10, viewX + 110, viewY + 20, respirator/90, c_black, c_blue, c_blue, 0, true, false);
draw_healthbar(viewX + 10, viewY + 30, viewX + 110, viewY + 40, sprint/3, c_black, c_red, c_green, 0, true, false);

draw_text(viewX + 10, viewY + 50, "Bunker supplies  " + string(global.bunker_food));
draw_text(viewX + 10, viewY + 70, "Carried supplies " + string(global.carried_food));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
